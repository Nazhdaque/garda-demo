:root {
	/* |||||||||| |||||||||| |||||||||| |||||||||| demo */
	--size: calc((var(--max-content-width) - var(--gap-x) * 11) / 12);
}

.garda-demo-grid {
	--col: 12;
	--shrink: 0.25;
}

.garda-bg {
	background-color: var(--clr-0b);
	padding-block: var(--main-content-pad-x);
	/* place-items: center; */
	position: relative;
}

.demo-bg {
	/* https://css-generators.com */
	--s: 4rem;
	--c1: hsl(0, 0%, 12%);
	--c2: hsl(0, 0%, 9%);
	--c3: hsl(0, 0%, 6%);

	--_g: 0 120deg, #0000 0;
	background: conic-gradient(
			from 0deg at calc(500% / 6) calc(100% / 3),
			var(--c3) var(--_g)
		),
		conic-gradient(
			from -120deg at calc(100% / 6) calc(100% / 3),
			var(--c2) var(--_g)
		),
		conic-gradient(
			from 120deg at calc(100% / 3) calc(500% / 6),
			var(--c1) var(--_g)
		),
		conic-gradient(
			from 120deg at calc(200% / 3) calc(500% / 6),
			var(--c1) var(--_g)
		),
		conic-gradient(
			from -180deg at calc(100% / 3) 50%,
			var(--c2) 60deg,
			var(--c1) var(--_g)
		),
		conic-gradient(
			from 60deg at calc(200% / 3) 50%,
			var(--c1) 60deg,
			var(--c3) var(--_g)
		),
		conic-gradient(
			from -60deg at 50% calc(100% / 3),
			var(--c1) 120deg,
			var(--c2) 0 240deg,
			var(--c3) 0
		);

	background-size: calc(var(--s) * 1.732) var(--s);
	background-position: center;
	background-attachment: fixed;
}

.demo-box {
	--gap-y: var(--gap-x);

	display: grid;
	place-items: center stretch;
	grid-auto-rows: min-content;
	row-gap: var(--size);
	margin-block: var(--size) 0;
}
.demo-box:has(.garda-demo-grid) {
	row-gap: var(--gap-x);
	margin-block: var(--size) var(--gap-y);
}

.demo {
	counter-reset: counter;
	height: 100%;
}

.demo > *,
.xxx.test {
	--rad: 0;

	display: grid;
	min-height: var(--size);
	font-size: 0.85rem;
	color: hsl(var(--hue), 25%, 50%);
	overflow: hidden;
	overflow-wrap: anywhere;
}

.demo > *::before {
	font-size: var(--fs-md);
	position: absolute;
	place-self: center;
	content: counter(counter);
	counter-increment: counter;
	min-width: calc(var(--size) * 0.75);
	padding: 0.33em;
	aspect-ratio: 1;
	display: flex;
	align-items: center;
	justify-content: center;
	color: hsl(var(--hue), 100%, 50%);
	border-radius: 50%;
	border: var(--border);
	pointer-events: none;
	background-image: var(--sphere);
	z-index: 1;
}

/* |||||||||| |||||||||| |||||||||| |||||||||| */
/* .demo.grid-x > *::before {
	content: "grid-x";
}
.demo.flex-x > *::before {
	content: "flex-x";
}
.demo .width-x::before {
	content: "width-x";
} */

.demo.gta > *::before {
	content: counter(counter, upper-alpha);
}

.demo.flex-x {
	flex-wrap: wrap;
	justify-content: center;
}

.demo .width-x:not(:last-child) {
	margin-bottom: var(--gap-y);
}

/* |||||||||| |||||||||| |||||||||| |||||||||| */
.full-bleed > * {
	grid-column: 2;
}
.full-bleed::after {
	z-index: -1;
}

/* |||||||||| |||||||||| |||||||||| |||||||||| grid-template-areas */
.demo.gta > *:nth-child(1) {
	grid-area: a;
}
.demo.gta > *:nth-child(2) {
	grid-area: b;
}
.demo.gta > *:nth-child(3) {
	grid-area: c;
}
.demo.gta > *:nth-child(4) {
	grid-area: d;
}
.demo.gta > *:nth-child(5) {
	grid-area: e;
}
.demo.gta > *:nth-child(6) {
	grid-area: f;
}
.demo.gta > *:nth-child(7) {
	grid-area: g;
}
.demo.gta > *:nth-child(8) {
	grid-area: h;
}
.demo.gta > *:nth-child(9) {
	grid-area: i;
}
.demo.gta > *:nth-child(10) {
	grid-area: j;
}
.demo.gta > *:nth-child(11) {
	grid-area: k;
}
.demo.gta > *:nth-child(12) {
	grid-area: l;
}

.gta {
	justify-self: center;
	display: grid;
	gap: var(--gap-x);
	grid-auto-rows: var(--size);
	grid-template-areas:
		"a a a a f b"
		"e e e j f b"
		"d i i j f b"
		"d h l k k b"
		"d h l g g g"
		"d h c c c c";

	/* ". . . . . ."
			". . . . . ."
			". . . . . ."
			". . . . . ."
			". . . . . ."
			". . . . . ."; */
}

@media (width <= 1200px) {
	.gta {
		grid-template-areas:
			"a a a a a b"
			"d e e e f b"
			"d h i j f b"
			"d h l k f b"
			"d h g g g b"
			"d c c c c c";
	}
}

@media (width <= 992px) {
	.gta {
		grid-template-areas:
			"a a a a a b"
			"d e e j f b"
			"d i . . f b"
			"d h . . k b"
			"d h l g g b"
			"d c c c c c";
	}
}

@media (width <= 768px) {
	.gta {
		grid-template-areas:
			". . g e c a"
			". . g e c a"
			"h h i e c a"
			"f f f j c a"
			"d d d d k a"
			"b b b b b l";
	}
}

@media (width <= 576px) {
	.gta {
		grid-template-columns: 1fr;
		grid-template-areas:
			"a"
			"b"
			"c"
			"d"
			"e"
			"f"
			"g"
			"h"
			"i"
			"j"
			"k"
			"l";
	}
}

/* |||||||||| |||||||||| |||||||||| |||||||||| masonry */
.demo.masonry {
	grid-auto-rows: var(--size);
}
.demo.masonry > * {
	padding: 0;
}

/* |||||||||| |||||||||| |||||||||| |||||||||| demo colors */
.demo > * {
	--clr-shift: 0;
	--hue: calc(var(--clr-shift) + var(--deg));
	--transparency: 0.25;
	--border: hsl(var(--hue), 100%, 50%) var(--thickness) dotted;

	--sphere: radial-gradient(
		circle at 65% 15%,
		white 0.01em,
		hsl(var(--hue), 100%, 50%) 3%,
		hsl(var(--hue), 100%, 5%) 60%,
		hsl(var(--hue), 100%, 25%) 100%
	);

	position: relative;
}
.demo:not(.demo.xxx) > *::after {
	position: absolute;
	content: "";
	inset: 0;
	border: var(--border);
	border-radius: var(--rad, 0);
	background-image: repeating-linear-gradient(
		-60deg,
		hsl(var(--hue), 100%, 50%, var(--transparency)) 0 var(--thickness),
		transparent var(--thickness) calc(var(--thickness) * var(--density))
	);
	background-clip: padding-box;
	pointer-events: none;
}
.demo > *:nth-child(3n + 1) {
	--deg: 180;
}
.demo > *:nth-child(3n + 2) {
	--deg: 300;
}
.demo > *:nth-child(3n + 3) {
	--deg: 60;
}
.demo > *:where(:hover, :focus-visible) {
	--hue: calc(var(--clr-shift) + var(--deg) + 30);
}
.demo > * > * {
	--deg: 210;
}

/* |||||||||| |||||||||| |||||||||| |||||||||| del-section-btn */
.del-section-btn {
	--hue: calc(var(--clr-shift) + var(--deg));
	--clr-shift: 0;
	--deg: 180;
	--sphere: radial-gradient(
		circle at 65% 15%,
		white 0.01em,
		hsl(var(--hue), 100%, 50%) 3%,
		hsl(var(--hue), 100%, 5%) 60%,
		hsl(var(--hue), 100%, 25%) 100%
	);

	position: absolute;
	border-radius: 50%;
	background-image: url(./images/icons/cross-mark-1.svg), var(--sphere);
	background-size: contain;
	background-position: center;
	background-repeat: no-repeat;
	right: var(--main-content-pad-x);
	top: calc(var(--size) * -0.25);
	width: calc(var(--size) / 2);
	aspect-ratio: 1;
	cursor: pointer;
	scale: 1;
	transition: scale var(--time) ease;
	outline-offset: var(--outline-width);
	z-index: 2;
}
.del-section-btn:focus-visible {
	outline: var(--outline);
}
.del-section-btn:where(:focus-visible, :hover) {
	--deg: 300;

	scale: 1.075;
}

.del-section-btn::before {
	content: "";
}
